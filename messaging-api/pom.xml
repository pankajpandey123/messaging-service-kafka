<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.mesg</groupId>
	<artifactId>messaging-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>messaging-service</name>
	<description>Msg Service project for Spring Boot</description>

	<properties>
		<java.version>11</java.version>
		<!-- <maven.compiler.release>11</maven.compiler.release> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
			<maven.compiler.source>15</maven.compiler.source> <maven.compiler.target>15</maven.compiler.target> -->
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- <dependency> <groupId>org.apache.kafka</groupId> <artifactId>kafka-streams</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>exec-maven-plugin</artifactId> 
				<version>1.6.0</version> <executions> Remove existing image from local repo 
				<execution> <id>docker-clean</id> <phase>install</phase> <goals> <goal>exec</goal> 
				</goals> <configuration> <executable>docker</executable> <workingDirectory>${project.basedir}</workingDirectory> 
				<arguments> <argument>rmi</argument> <argument>${project.groupId}/${project.artifactId}:${project.version}</argument> 
				</arguments> </configuration> </execution> Create new docker image using 
				Dockerfile which must be present in current working directory. Tag the image 
				using maven project version information. <execution> <id>docker-build</id> 
				<phase>install</phase> <goals> <goal>exec</goal> </goals> <configuration> 
				<executable>docker</executable> <workingDirectory>${project.basedir}</workingDirectory> 
				<arguments> <argument>build</argument> <argument>-t</argument> <argument>${project.groupId}/${project.artifactId}:${project.version}</argument> 
				<argument>.</argument> </arguments> </configuration> </execution> Login and 
				Push the image to a docker repo. <execution> <id>docker-login</id> <phase>deploy</phase> 
				<goals> <goal>exec</goal> </goals> <configuration> <executable>docker</executable> 
				<workingDirectory>${project.basedir}</workingDirectory> <arguments> <argument>login</argument> 
				<argument>-u</argument> <argument>${docker.user}</argument> <argument>-p</argument> 
				<argument>${docker.password}</argument> <argument>${docker.url}</argument> 
				</arguments> </configuration> </execution> <execution> <id>docker-push</id> 
				<phase>deploy</phase> <goals> <goal>exec</goal> </goals> <configuration> 
				<executable>docker</executable> <workingDirectory>${project.basedir}</workingDirectory> 
				<arguments> <argument>push</argument> <argument>${project.groupId}/${project.artifactId}:${project.version}</argument> 
				</arguments> </configuration> </execution> </executions> </plugin> -->
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>

</project>
